package com.americancsm.gdpr.webassess.model;

import static com.americancsm.gdpr.webassess.model.ContinentEnum.AFRICA;
import static com.americancsm.gdpr.webassess.model.ContinentEnum.EUROPE;
import static com.americancsm.gdpr.webassess.model.ContinentEnum.ASIA;
import static com.americancsm.gdpr.webassess.model.ContinentEnum.OCEANIA;

import org.apache.commons.text.WordUtils;

public enum CountryEnum {
	// Americas
	UNITED_STATES, BRAZIL, MEXICO, COLUMBIA, ARGENTINA, CANADA, PERU, VENEZUELA, CHILI, GUATEMALA, ECUADOR,
	CUBA, BOLIVIA, HAITI, DOMINICAN_REPUBLIC, HONDURAS, PARAGUAY, EL_SALVADOR, NICARAGUA, COSTA_RICA, PANAMA, 
	PUERTO_RICO, URUGUAY, JAMAICA, TRINIDAD_AND_TOBAGO, GUYANA, SURINAME, GUADELOUPE, BAHAMAS, MARTINIQUE, 
	BELIZE, BARBADOS, FRENCH_GUIANA, SAINT_LUCIA, CURACAO, SAINT_VINCENT_AND_GRENADINES, GRENADA, ARUBA, 
	UNITED_STATES_VIRGIN_ISLANDS, ANTIGUA_AND_BARBUDA, CAYMAN_ISLANDS, SAINT_PIERRE_AND_MIQUELON, MONTSERRAT,
	FALKLAND_ISLANDS,
	
	// Asia
	CHINA(ASIA), INDIA(ASIA), INDONESIA(ASIA), PAKISTAN(ASIA), BANGLADESH(ASIA), JAPAN(ASIA), PHILLIPPINES(ASIA), VIETNAM(ASIA), IRAN(ASIA), TURKEY(ASIA), THAILAND(ASIA), MYANMAR(ASIA),
	SOUTH_KOREA(ASIA), IRAQ(ASIA), AFGHANISTAN(ASIA), SAUDI_ARABIA(ASIA), UZBEKISTAN(ASIA), MALAYSIA(ASIA), NEPAL(ASIA), YEMEN(ASIA), NORTH_KOREA(ASIA), TAIWAN(ASIA), 
	SRI_LANKA(ASIA), SYRIA(ASIA), KAZAKHSTAN(ASIA), CAMBODIA(ASIA), AZERBAIJAN(ASIA), JORDAN(ASIA), UNITED_ARAB_EMIRATES(ASIA), TAJIKISTAN(ASIA), ISREAL(ASIA), 
	HONG_KONG(ASIA), LAOS(ASIA), LEBANON(ASIA), KYRGYZSTAN(ASIA), TURKMENISTAN(ASIA), SINGAPORE(ASIA), PALESTINE(ASIA), OMAN(ASIA), KUWAIT(ASIA), GEORGIA(ASIA), MONGOLIA(ASIA), 
	ARMENIA(ASIA), QATAR(ASIA), BAHRAIN(ASIA), EAST_TIMOR(ASIA), BHUTAN(ASIA), 
	
	// Europe
	// EU Countries
	AUSTRIA(true), BELGIUM(true), BULGARIA(true), CROATIA(true), CYPRUS(true), CZECH_REPUBLIC(true), DENMARK(true), 
	ESTONIA(true), FINLAND(true), FRANCE(true), GERMANY(true), GREECE(true), HUNGARY(true), IRELAND(true), 
	ITALY(true), LATVIA(true), LITHUANIA(true), LUXEMBOURG(true), MALTA(true), NETHERLANDS(true), POLAND(true), 
	PORTUGAL(true), ROMANIA(true), SLOVAKIA(true), SLOVENIA(true), SPAIN(true), SWEDEN(true), UNITED_KINGDOM(true), 
	
	// Non-EU European Countries
	RUSSIA(EUROPE), UKRAINE(EUROPE), BELARUS(EUROPE), SERBIA(EUROPE), SWITZERLAND(EUROPE), NORWAY(EUROPE), 
	MOLDOVA(EUROPE), BOSNIA_AND_HERZEGOVINA(EUROPE), ALBANIA(EUROPE), REPUBLIC_OF_MACEDONIA(EUROPE), 
	MONTENEGRO(EUROPE), ICELAND(EUROPE), GUERNSEY_AND_JERSEY(EUROPE), ISLE_OF_MAN(EUROPE), ANDORRA(EUROPE), 
	FARCE_ISLANDS(EUROPE), MONACO(EUROPE), LIECHTENSTEIN(EUROPE), GILBRALTAR(EUROPE), SAN_MARINO(EUROPE), 
	VATICAN_CITY(EUROPE),
	
	// Oceania
	AUSTRAILIA(OCEANIA), PAPUA_NEW_GUINEA(OCEANIA), NEW_ZEALAND(OCEANIA), FIJI(OCEANIA), SOLOMON_ISLANDS(OCEANIA), 
	FRENCH_POLYNESIA(OCEANIA), NEW_CALEDONIA(OCEANIA), VANUATU(OCEANIA), SAMOA(OCEANIA), GUAM(OCEANIA), 
	KIRBATI(OCEANIA), TONGA(OCEANIA), FEDERATED_STATES_OF_MICRONESIA(OCEANIA), AMERICA_SAMOA(OCEANIA), 
	NORTHERN_MARIANA_ISLANDS(OCEANIA), MARSHALL_ISLANDS(OCEANIA), PALAU(OCEANIA), COOK_ISLANDS(OCEANIA), 
	WALLIS_AND_FUTUNA(OCEANIA), NAURU(OCEANIA), TUVALU(OCEANIA), NIUE(OCEANIA), TOKELAU(OCEANIA),
	
	// Africa
	EGYPT(AFRICA), SOUTH_AFRICA(AFRICA), KENYA(AFRICA), UGANDA(AFRICA), ALGERIA(AFRICA), SUDAN(AFRICA), 
	MOROCCO(AFRICA), ANGOLA(AFRICA), MOZAMBIQUE(AFRICA), GHANA(AFRICA), MADAGASCAR(AFRICA), 
	IVORY_COAST(AFRICA), CAMEROON(AFRICA), NIGER(AFRICA), BURKINA_FASO(AFRICA), MALAWI(AFRICA), 
	MALI(AFRICA), ZAMBIA(AFRICA), ZIMBABWE(AFRICA), SENEGAL, CHAD(AFRICA), SOMALIA(AFRICA), 
	GUINEA(AFRICA), SOUTH_SUDAN, RWANDA(AFRICA), TUNISIA(AFRICA), BENIN(AFRICA), BURUNDI(AFRICA), 
	TOGO(AFRICA), SIERRA_LEONE(AFRICA), LIBYA(AFRICA), CONGO(AFRICA), ERTREA(AFRICA), LIBERIA(AFRICA), 
	CENTRAL_AFRICAN_REPUBLIC(AFRICA); 

	private boolean isEUMemberCountry;
	private ContinentEnum continent;
	
    private CountryEnum() {
    	    this.isEUMemberCountry = false;
    	    this.continent = ContinentEnum.AMERICAS;
    }
    
    private CountryEnum(boolean isEUMemberCountry) {
    	    this.isEUMemberCountry = isEUMemberCountry;
    	    this.continent = ContinentEnum.EUROPE;
    }
    
    private CountryEnum(ContinentEnum continent) {
    	    this.isEUMemberCountry = false;
    	    this.continent = continent;
    }
    
    public boolean isEUMemberCountry() {
    		return this.isEUMemberCountry;
    }
    
    public ContinentEnum getContinent() {
    		return this.continent;
    }
    
    public String getProperName() {
    	    return WordUtils.capitalizeFully(this.name().replaceAll("_", " "));
    }
}
